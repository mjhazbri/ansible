---
- name: Configure instances of microservice {{ microservice.app_name }}
  include_tasks: configure_instance.yml
  with_sequence: start=0 end="{{ microservice['number'] | int - 1}}"
  vars:
    instance_name: "{{ microservice.app_name }}{{ instance_item }}"
  loop_control:
    loop_var: instance_item 

- name: Call role-springboot for microservice {{ microservice.app_name }} by instance
  include_tasks: call-springboot-role.yml
  with_sequence: start=0 end="{{ microservice['number'] | int - 1}}"
  vars:
    instance_name: "{{ microservice.app_name }}{{ instance_item }}"
  loop_control:
    loop_var: instance_item 

- include_role: 
    name: role-springboot
  with_sequence: start=0 end="{{ microservice['number'] | int - 1}}"
  vars:
    instance_name: "{{ microservice.app_name }}{{ instance_item }}"
    sb_app_name: "{{ instance_name }}"
    sb_app_group_id: "{{ microservice.group_id }}"
    sb_app_artifact_id: "{{ microservice.artifact_id }}"
    sb_app_version: "{{ microservice.app_vesrion }}"
    sb_app_extension: jar
    sb_local_maven_artifact_dowload: false
    sb_app_artifact_file: "{{ playbook_dir}}/artifacts/{{ microservice.artifact_id }}-{{ microservice.app_vesrion }}.jar"
    sb_app_config_file_template_path: "{{ git_config_dir }}/{{ microservice.app_name }}/{{ microservice.properties_file_name_tpl }}"
    sb_applications_root_folder: "{{ microservice.app_dir}}/{{ instance_name }}"
    sb_app_config_file_final_name: "{{ microservice.properties_file_name }}"
    sb_app_create_users: false
    sb_app_user: "{{ username }}"
    sb_app_user_group: "{{ groupname }}"
    #sb_app_java_opts_others: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=6006"
    #sb_app_healthcheck_urls:
    #  - "http://localhost:8082/actuator/health"
    #sb_app_healthcheck_ports:
    #  - 8082
    sb_app_env:
      - name: LOGGING_PATH
        value: "{{ sb_applications_root_folder }}/{{ sb_app_name | upper }}/logs"
  loop_control:
    loop_var: instance_item 

#- include_role: 
#    name: install-service
#  loop: "{{ lookup('ansible.builtin.dict', microservices) }}"
#  vars:
#    microservice: "{{ msinstall_item.value }}" 
#  loop_control:
#    loop_var: msinstall_item
#
#
#
#
#- name: Use of variable
#  debug:
#    msg: "{{ item }}{{ outer_item }}"
#  with_sequence: start=0 end="{{ microservices[item]['ms_number'] | int - 1}}"
#  loop_control:
#    loop_var: outer_item
#
#- name: Configure and start service {{ item }}
#  include_tasks: configure_start_service.yml
#  with_sequence: start=0 end="{{ microservices[item]['ms_number'] | int - 1}}"
#  vars:
#    microservice_item: "{{ item }}{{ outer_item }}" 
#  loop_control:
#    loop_var: outer_item 
